  return(as.numeric(row))
}))
f[time_series_columns] <- t(apply(df[time_series_columns], 1, function(row) {
  non_na_indices <- which(!is.na(row))
  
  if (length(non_na_indices) >= 2) {
    row[non_na_indices[1]:non_na_indices[length(non_na_indices)]] <- 
      seq(row[non_na_indices[1]], row[non_na_indices[length(non_na_indices)]], length.out = length(non_na_indices))
  }
  
  return(as.numeric(row))
}))
df[time_series_columns] <- t(apply(df[time_series_columns], 1, function(row) {
  non_na_indices <- which(!is.na(row))
  
  if (length(non_na_indices) >= 2) {
    # 找到非有限值
    non_finite_values <- which(!is.finite(row))
    
    # 将非有限值替换为相邻的有效值
    for (index in non_finite_values) {
      left_neighbor <- max(non_na_indices[non_na_indices < index])
      right_neighbor <- min(non_na_indices[non_na_indices > index])
      
      row[index] <- mean(c(row[left_neighbor], row[right_neighbor]), na.rm = TRUE)
    }
    
    # 使用 seq 填充
    row[non_na_indices[1]:non_na_indices[length(non_na_indices)]] <- 
      seq(row[non_na_indices[1]], row[non_na_indices[length(non_na_indices)]], length.out = length(non_na_indices))
  }
  
  return(as.numeric(row))
}))
df[time_series_columns] <- t(apply(df[time_series_columns], 1, function(row) {
  non_na_indices <- which(!is.na(row))
  
  if (length(non_na_indices) >= 2) {
    # 找到非有限值
    non_finite_values <- which(!is.finite(row))
    
    # 将非有限值替换为相邻的有效值
    for (index in non_finite_values) {
      left_neighbor <- max(non_na_indices[non_na_indices < index])
      right_neighbor <- min(non_na_indices[non_na_indices > index])
      
      row[index] <- mean(c(row[left_neighbor], row[right_neighbor]), na.rm = TRUE)
    }
    
    # 确保起始值是有限的
    from_value <- row[non_na_indices[1]]
    from_value <- ifelse(is.finite(from_value), from_value, row[non_na_indices[2]])
    
    # 使用 seq 填充
    row[non_na_indices[1]:non_na_indices[length(non_na_indices)]] <- 
      seq(from_value, row[non_na_indices[length(non_na_indices)]], length.out = length(non_na_indices))
  }
  
  return(as.numeric(row))
}))
time_series_columns <- grep("^X\\d{4}$", names(df), value = TRUE)
df[time_series_columns] <- t(apply(df[time_series_columns], 1, function(row) {
  non_na_indices <- which(!is.na(row))
  
  if (length(non_na_indices) >= 2) {
    # 找到非有限值
    non_finite_values <- which(!is.finite(row))
    
    # 将非有限值替换为相邻的有效值
    for (index in non_finite_values) {
      left_neighbor <- max(non_na_indices[non_na_indices < index])
      right_neighbor <- min(non_na_indices[non_na_indices > index])
      
      row[index] <- mean(c(row[left_neighbor], row[right_neighbor]), na.rm = TRUE)
    }
    
    # 获取有限值的索引
    finite_indices <- which(is.finite(row))
    
    # 如果有限值的索引不为空，则使用 seq 进行填充
    if (length(finite_indices) > 0) {
      # 确保起始值是有限的
      from_value <- row[finite_indices[1]]
      
      # 使用 seq 填充
      row[non_na_indices] <- seq(from_value, length.out = length(non_na_indices))
    }
  }
  
  return(as.numeric(row))
}))
df[4,34:104]
time_series_columns <- grep("^X\\d{4}$", names(df), value = TRUE)
df[time_series_columns] <- t(apply(df[time_series_columns], 1, function(row) {
  row <- zoo::na.approx(row, method = "linear", na.rm = FALSE, xout = seq_along(row))
  return(as.numeric(row))
}))
df[4,34:104]
row <- df[1, ]
# 提取非 NA 值的索引
non_na_indices <- which(!is.na(row[time_series_columns]))
# 如果有至少两个非 NA 值，进行线性插值并打印结果
if (length(non_na_indices) >= 2) {
  interpolated_values <- zoo::na.approx(row[time_series_columns], 
                                         method = "linear", 
                                         na.rm = FALSE, 
                                         rule = 2,
                                         x = non_na_indices)$y
  
  print(interpolated_values)
} else {
  print("至少需要两个非 NA 值才能进行插值。")
}
df[df == "NULL"] <- NA
head(df)
df<-read.csv('../Data/LPD2022_public.csv',header=T)
df[df == "NULL"] <- NA
head(df)
time_series_columns <- grep("^X\\d{4}$", names(df), value = TRUE)
df[time_series_columns] <- t(apply(df[time_series_columns], 1, function(row) {
  row <- zoo::na.approx(row, method = "linear", na.rm = FALSE, xout = seq_along(row))
  return(as.numeric(row))
}))
write.csv(df,'../Data/LPD2022_public.csv')
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/interpolation.R", encoding = "UTF-8")
df<-read.csv('../Data/linear_interpolation.csv',header=T)
grouped_df <- df %>%
  group_by(Species) %>%
  # 2. 计算每个物种的时间序列平均值
  summarise(across(starts_with("X"), ~mean(., na.rm = TRUE), .names = "species_mean"))
install.packages("cli", dependencies = TRUE)
grouped_df <- df %>%
  group_by(Species) %>%
  # 2. 计算每个物种的时间序列平均值
  summarise(across(starts_with("X"), ~mean(., na.rm = TRUE), .names = "species_mean"))
remove.packages("cli")
install.packages("cli", dependencies = TRUE)
options(repos = c(CRAN = "https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
remove.packages("cli")
install.packages("cli", dependencies = TRUE)
grouped_df <- df %>%
  group_by(Species) %>%
  # 2. 计算每个物种的时间序列平均值
  summarise(across(starts_with("X"), ~mean(., na.rm = TRUE), .names = "species_mean"))
options(repos = c(CRAN = "https://cran.rstudio.com/"))
remove.packages("cli")
install.packages("cli", dependencies = TRUE)
packageVersion("cli")
remove.packages("cli")
unlink(system.file("libs", "cli", package = "cli"), recursive = TRUE)
install.packages("cli")
install.packages("installr")  # 如果尚未安装，请安装 'installr' 包
installr::updateR()  # 将R更新到最新版本
install.packages("cli")  # 重新安装 'cli' 包
remove.packages("stringi")
unlink(system.file("libs", "stringi", package = "stringi"), recursive = TRUE)
install.packages("stringi", dependencies = TRUE)
installr::updateR()
install.packages("stringi", dependencies = TRUE)
installr::updateR()
remove.packages("stringi")
path_to_stringi <- system.file("libs", "stringi", package = "stringi")
if (file.exists(path_to_stringi)) unlink(path_to_stringi, recursive = TRUE)
path_to_stringi <- system.file("libs", "stringi", package = "stringi")
if (dir.exists(path_to_stringi)) unlink(path_to_stringi, recursive = TRUE)
install.packages("stringi", dependencies = TRUE)
installr::updateR()
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/First_Data_Preparation.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Second_Data_Preparation.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/proportion_selection.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Third_Data_Preparation.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
shannon_index
simpson_index
N_ <- rep(304,26)
0.5 * ((N_/simpson_index)-1)
nrow(shannon_DF0)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
Ip1_
Ip1_2
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
relative_sensitivity
relative_sensitivity2
relative_sensitivity3
relative_sensitivity4
relative_sensitivity5
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
relative_sensitivity
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
relative_evenness
relative_evenness2
relative_evenness23
relative_evenness3
relative_evenness4
relative_evenness5
relative_evenness0
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
evenness_fitting <- lm(relative_evenness  ~abundance_distribution+evenness_sensitivity, data=fitting_data)
summary(evenness_fitting)
evenness_fitting <- lm(relative_evenness  ~I(abundance_distribution)^2+evenness_sensitivity, data=fitting_data)
summary(evenness_fitting)
evenness_fitting <- glm(relative_evenness  ~I(abundance_distribution)^2+evenness_sensitivity, data=fitting_data)
summary(evenness_fitting)
evenness_fitting <- glm(relative_evenness  ~abundance_distribution+(-evenness_sensitivity), data=fitting_data)
summary(evenness_fitting)
evenness_fitting <- glm(relative_evenness  ~abundance_distribution-evenness_sensitivity,family = gaussian, data=fitting_data)
summary(evenness_fitting)
evenness_fitting <- glm(relative_evenness  ~abundance_distribution+I(evenness_sensitivity)^2,family = gaussian, data=fitting_data)
summary(evenness_fitting)
-relative_evenness2
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
Ip1_
relative_sensitivity
Ip1_[-1]
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
Years
years
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
years[-1]
length(years)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
relative_sensitivity
years
length(years)
length(fitting_data[,3])
length(fitting_data[,4])
fitting_data[,4] <- years
fitting_data[,4] 
length(fitting_data[,4])
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
cor.test(fitting_data[,1],fitting_data[,2])
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
evenness_fitting <- glm(relative_evenness  ~abundance_distribution+evenness_sensitivity+log(species_richness),family = gaussian, data=fitting_data)
summary(evenness_fitting)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
cor_matrix(fitting_data)
cor(fitting_data)
pcor(fitting_data)
library(ppcor0
)
library(ppcor)
install.packages("ppcor")
library(ppcor)
pcor(fitting_data)
library(pls)
install.packages("pls")
library(pls)
pcr_model <- pcr(relative_evenness  ~abundance_distribution+evenness_sensitivity+species_richness, data = fitting_data, validation = "CV")
pcr_model <- pcr(relative_evenness ~ abundance_distribution + evenness_sensitivity + species_richness, 
                 data = fitting_data, validation = "CV", segments = 5)
summary(pcr_model)
nrow(shannon_DF)
nrow(shannon_DF2)
nrow(shannon_DF3)
nrow(shannon_DF4)
nrow(shannon_DF5)
nrow(shannon_DF0)
relative_evenness
relative_evenness2
relative_evenness3
relative_evenness4
relative_evenness5
relative_evenness0
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(pcr_model0
)
summary(pcr_model)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(pcr_model)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(pcr_model_)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
install.packages(c("igraph","ggraph","tidygraph"))
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
install.packages("magick")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
update.packages(c("DiagrammeR", "DiagrammeRsvg", "rsvg", "magick"))
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
library(rsvg)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/flow_chart.R", encoding = "UTF-8")
Ip1_
evenness_std
relative_sensitivity
relative_sensitivity2
evenness_std2
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(pcr_model)
summary(pcr_model2)
summary(pcr_model3)
summary(pcr_model4)
summary(pcr_model5)
summary(pcr_model0)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(pcr_model)
summary(pcr_model2)
summary(pcr_model3)
summary(pcr_model4)
summary(pcr_model5)
summary(pcr_model6)
summary(pcr_model0)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
Q
\
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
Q
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
Q
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(pcr_model)
summary(pcr_model2)
summary(pcr_model3)
summary(pcr_model4)
summary(pcr_model5)
summary(pcr_model0)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
evenness_fitting <- glm(Ip1_ ~ relative_sensitivity + evenness_std, data = fitting_data, family = gaussian)
summary(evenness_fitting)
source("/Users/kun/Documents/CMEECoursework/Research_Project/Code/Data_scale.R", encoding = "UTF-8")
summary(evenness_fitting)
summary(evenness_fitting2)
summary(evenness_fitting3)
summary(evenness_fitting4)
summary(evenness_fitting5)
summary(evenness_fitting0)
q()
